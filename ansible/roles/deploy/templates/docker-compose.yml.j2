version: "3"

networks:
  default:
    external:
      name: {{containers_network}}

volumes:
    grafana-data:
        driver: local
    loki-data:
        driver: local

services:
    rabbitmq:
        image: "rabbitmq:3-management"
        restart: always
        environment:
            RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
        ports:
            - "15672:15672" # RabbitWebInterface
            - "5672:5672" # AMQP
            - "1883:1883" # MQTT
        labels:
            NAME: "rabbitmq"
        volumes:
            - ./config/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins:ro
            - ./config/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
            #- ./config/rabbitmq/autocluster-0.4.1.ez:/usr/lib/rabbitmq/lib/rabbitmq_server-3.5.5/plugins/autocluster-0.4.1.ez
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"

    apiserver:
        image: acs-registry.duckdns.org/apiserver:{{smartdep_version}}
        env_file:
            - "config/.env"
        environment:
            - DMINUTES=5
            - PREPARE_RABBITMQ=True
        restart: always
        ports:
            - 5000:8080
        command:
            [
                "gunicorn",
                "-k=geventwebsocket.gunicorn.workers.GeventWebSocketWorker",
                "--workers=1",
                "-b=0.0.0.0:8080",
                "app:app",
            ]
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"

    web:
        image: acs-registry.duckdns.org/webui:{{smartdep_version}}
        restart: always
        ports:
            - "81:80"
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"

    apiserver:
        image: acs-registry.duckdns.org/apiserver:{{smartdep_version}}
        env_file:
            - "config/.env"
        environment:
            - DMINUTES=5
            - PREPARE_RABBITMQ=True
        restart: always
        ports:
            - "5000:8080"
        command:
            [
                "gunicorn",
                "-k=geventwebsocket.gunicorn.workers.GeventWebSocketWorker",
                "--workers=1",
                "-b=0.0.0.0:8080",
                "app:app",
            ]
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"

    microserver:
        image: acs-registry.duckdns.org/microserver:{{smartdep_version}}
        env_file:
            - "config/.env"
        restart: always
        ports:
            - "5001:8080"
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"
        command:
            ["gunicorn", "--workers=1", "-b=0.0.0.0:8080", "wsgi:create_app()"]

    emulator:
        image: acs-registry.duckdns.org/emulator:{{smartdep_version}}
        restart: always
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"

    state_tracker:
        image: acs-registry.duckdns.org/tracker:{{smartdep_version}}
        env_file:
            - "config/.env"
        environment:
            - TYPE=state
            - BUFFER_LIMIT=1000
            - TIMEOUT_S=1.0
        restart: always
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"

    command_tracker:
        image: acs-registry.duckdns.org/tracker:{{smartdep_version}}
        env_file:
            - "config/.env"
        environment:
            - TYPE=command
            - BUFFER_LIMIT=1000
            - TIMEOUT_S=1.0
        restart: always
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"

    config_tracker:
        image: acs-registry.duckdns.org/tracker:{{smartdep_version}}
        env_file:
            - "config/.env"
        environment:
            - TYPE=config
            - BUFFER_LIMIT=1000
            - TIMEOUT_S=1.0
        restart: always
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"

    fluentd:
        image: acs-registry.duckdns.org/fluentd:{{smartdep_version}}
        restart: always
        ports:
            - 24224:24224
        volumes:
            - ./config/fluentd/fluent.conf:/fluentd/etc/fluent.conf
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"

    loki:
        image: grafana/loki:latest
        restart: always
        ports:
            - 3100:3100
        command: -config.file=/etc/loki/local-config.yaml
        volumes:
            - loki-data:/data/loki
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"

    grafana:
        image: grafana/grafana:6.7.3
        restart: always
        ports:
            - 3000:3000
        volumes:
            - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
            - ./config/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
            - grafana-data:/var/lib/grafana
        # environment:
        #     - GF_INSTALL_PLUGINS="grafana-clock-panel 1.0.1,grafana-simple-json-datasource 1.3.5"
        logging:
            driver: "json-file"
            options:
                max-file: "5"
                max-size: "20m"
